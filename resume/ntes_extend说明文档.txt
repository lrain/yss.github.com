// ntes_extend-min.js 详解 add by yansong
// ntes_extend-min.js是针对NTES库的扩展
// 地址：http://img2.cache.netease.com/game/widget/extend/ntes_extend-min.js
// 源文件地址：http://img2.cache.netease.com/game/widget/extend/ntes_extend.js

第一部分: DOM操作部分
	1. parent(className|tagName) 获取父节点 param: 节点的classname或tagname 没有则返回null
		eg: $('#tt').parent('div');
			$('#tt').parent('.list');
	2. next(className|tagName) 获取下一个节点 eg: 同parent
	3. prev(className|tagName) 获取上一个节点 eg: 同parent
	4. child() 获取节点的孩子节点
		eg: $('#tt').child();
	5. first() 获取第一个孩子节点
		eg: $('#tt').first();
	6. last() 获取最后一个孩子节点
		eg: $('#tt').last()
	7. fadeIn(fn) 以渐变方式进入页面 fn: 回调函数
		eg: $('#tt').fadeIn(function(){...})
	8. fadeOut(fn) 以渐变方式退出页面
		eg: $('#tt').fadeOut(function(){...})
	9. fire(type) 触发元素的原生事件 type: event事件
		eg: $('#tt').fire('click') 相当于jquery的$('#tt').click()
		
第二部分：常用函数
	/**
	 * 对象复制和替换 MIN version 如果对应的s里的值为0, null, undefined也会覆盖
	 * @param s {object}||{array} 需要加载的对象
	 * @param o {object} 加载到s上的对象
	 * @param w {boolean} 是否覆盖原有的方法 默认：false
	 */
	1. $.mix(s, o, w, pro)
		eg: var s = {a:1}, d={g:t, a:2}; $.mix(s, d) => s=={a:1, g:t}
			var s = {a:1}, d={g:t, a:2}; $.mix(s, d, 1) => s=={a:2, g:t}
			function s(){}  function d(){} d.prototype={a:1}  $.mix(s, d, '', 1) => s.prototype = {a:1}
	
	/**
	 * 触发元素的原生事件
	 *@param selector <HTMLELEMENT|string> 节点元素
	 *@param type <event> 事件类型。如: click, blur, focus ...
	 */
	2. $.fire(selector, type)
		eg: $.fire('.cls', 'click');
	
	// 空函数 就是：$.noop = function(){}
	3. $.noop()
	
	 /**
	 * 判定函数 if ... else ...
	 * 使用： #ab可以为：.ab $('#ab') $('.ab')
	 * 1、当存在id=ab的元素时：$.doWhileExist('#ab', fn);
	 * 2、当存在id=ab的元素时执行fn1，不存在时执行fn2：$.doWhileExist('#ab', fn1, fn2)
	 * 3、当不存在id=ab的元素时执行fn：$.doWhileExist('#ab', '', fn)
	 */
	4. $.doWhileExist(selector, fn1, fn2)
		eg: 同上
	
	// 增加jsonp的方式调用，使用同importJs
	5. $.jsonp = $.ajax.jsonp
	
	// 本地存储
	6. $.localStorage =
		{
			setItem(key, value),
			
			getItem(key),
			
			removeItem(key)
		
		}
		eg: $.localStorage.setItem('aa',1);		$.localStorage.removeItem('aa');	$.localStorage.getItem('aa');
		
第三部分：动画及卡盘
	
	/**
	 * 增加动画 node, css, duration, easing, delay, callback
	 * @param: o <object>
	 * 		@attr: node <id> 节点 必须的
	 *		@attr: css <object> 属性值 必须的
	 *		@attr: duration <float> 运行时间 默认：0.5s
	 *		@attr: easing <string|function> 使用的动画效果，内置：'ease','ease-in','ease-out','ease-in-out','linear' 默认：'ease' 扩展：function(pos){...}
	 *		@attr: delay <float> 延迟运行时间 默认：0
	 *		//@attr: callback <function>
	 * @param: callback <function> 回调函数
	 */
	1. $.animate(o, callback)
		eg: $.animate({
			node:'li',
			css:{
				margin: '20px',
				opacity:.6,
				height: '100px'
			},
			duration: 1,
			easing: 'ease-in-out',
			delay: 2
		}, function(){
			console.log(this[0].nodeName) // li
		})
	
	/*
	 * 滚动卡盘，需要特定的css支持
	 *@param o <object>
	 *		@attr panel <selector> 内容栏
	 *		@attr tab <selector> 切换栏，可空
	 *		@attr tabEvent <string> 鼠标切换事件 default: mouseover
	 *		@attr cls <string> 用于切换的class
	 *		@attr direction <string> 轮播方向（上或左）top|left default: top
	 *		@attr easing <string> 动画函数 default: ease
	 *		@attr duration <number> 动画所用时间 default: 0.5(s)
	 *		@attr length <number> 每次轮播滚动子元素长度 default: 1
	 *		@attr interval <number> 轮播间隔时间 default: 3
	 *		@attr autoplay <boolean> 是否自动循环 default: true
	 *		@attr startPos <number> 开始位置 default: 0
	 *@param callback
	 *@return 
	 */
	2. $.slide(o, callback)
	eg: $.slide({
		panel: '#id',
		direction: 'left',
		autoplay: 0,
		startPos: 3
	})
	$.slide({panel: '#id'});
	http://book.163.com/special/bookapp/
		
	